using CiaDeTalentos.Dashboard;
using CiaDeTalentos.Dashboard.Components;
using CiaDeTalentos.Dashboard.Data;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using System;
using System.Linq;
using System.Net.Http;

var builder = WebApplication.CreateBuilder(args);

// ðŸ”¹ ConfiguraÃ§Ã£o do banco de dados PostgreSQL
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));

// ðŸ”¹ Adicionando Blazor e Razor Components
builder.Services.AddRazorComponents()
    .AddInteractiveServerComponents();

// ðŸ”¹ Adicionando suporte para Controllers e API
builder.Services.AddControllers(); // ðŸ“Œ Adiciona suporte a Controllers

// ðŸ”¹ Registrando RepositÃ³rios e ServiÃ§os
builder.Services.AddScoped<IUserRepository, UserRepository>();
builder.Services.AddScoped<IUserService, UserService>();
builder.Services.AddScoped<ICandidatoRepository, CandidatoDataRepository>();
builder.Services.AddScoped<ICandidatoService, CandidatoService>();

// ðŸ”¹ Registrando `HttpClient` corretamente
builder.Services.AddScoped(sp => new HttpClient
{
    BaseAddress = new Uri("http://localhost:5088/") // âš  Se estiver rodando em HTTPS, altere para "https://localhost:5088/"
});

var app = builder.Build();

// ðŸ”¹ ConfiguraÃ§Ã£o do pipeline
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Error", createScopeForErrors: true);
    app.UseHsts();
}

// ðŸ”¹ ForÃ§ando HTTPS
app.UseHttpsRedirection();

// ðŸ”¹ Permitir acesso a arquivos estÃ¡ticos
app.UseStaticFiles();
app.UseAntiforgery();

// ðŸ”¹ Mapeando Controllers diretamente (ðŸš€ Novo padrÃ£o do .NET 7+)
app.MapControllers(); // ðŸ“Œ Mapeia os Controllers automaticamente

// ðŸ”¹ Debug: Listar todas as rotas registradas
var routeEndpoints = app.Services.GetService<Microsoft.AspNetCore.Routing.EndpointDataSource>()
    ?.Endpoints
    .OfType<RouteEndpoint>()
    .Select(e => e.RoutePattern.RawText);

Console.WriteLine("ðŸ“Œ Rotas Registradas:");
foreach (var route in routeEndpoints ?? Enumerable.Empty<string>())
{
    Console.WriteLine($"- {route}");
}

// ðŸ”¹ Mapeando os componentes do Blazor
app.MapRazorComponents<App>()
    .AddInteractiveServerRenderMode();

app.Run();
